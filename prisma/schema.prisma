// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "cockroachdb"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id             String    @id @default(uuid())
  email          String    @unique
  name           String?
  roles          Role[]    @default([USER])
  createdAt      DateTime  @default(now()) // For debugging purposes
  updatedAt      DateTime  @updatedAt
  profile        Profile?
  projects       Project[] // The projects a member is part of
  dietaryRestrId String[]
}

model Profile {
  id             String   @id @default(uuid())
  bio            String?
  linkedInURL    String?
  githubUsername String?
  phoneNum       String?
  joinedYear     String? // The year they joined formatted as Fall YYYY or Spring YYYY
  graduationYear String? // The year they will graduate formatted as Fall YYYY or Spring YYYY
  user           User     @relation(fields: [userId], references: [id])
  userId         String   @unique
  createdAt      DateTime @default(now()) // For debugging purposes
  updatedAt      DateTime @updatedAt
}

model Project {
  id          String   @id @default(uuid())
  title       String
  description String?
  members     User[]
  createdAt   DateTime @default(now()) // For debugging purposes
  updatedAt   DateTime @updatedAt
}

// EXEC have access to everything
// PLs have access to their projects and can add members to the project
// Users have access to their profile and projects they are part of
// The User model supports many roles
enum Role {
  EXEC
  PL
  USER
  APPLICANT // If we ever want to also store applicants in the DB
}
