// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "cockroachdb"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id                  String               @id // Use the clerk id not a uuid
  email               String               @unique
  slug                String               @unique // The slug is the user's first name and last name concatenated, however if there are multiple users with the same name, we append a number to the end of the slug
  firstName           String?
  lastName            String?
  roles               Role[]               @default([USER])
  createdAt           DateTime             @default(now()) // For debugging purposes
  updatedAt           DateTime             @updatedAt
  projects            Project[] // The projects a member is part of
  bio                 String?
  linkedInUrl         String?
  githubUsername      String?
  phoneNum            String?
  joinedYear          String? // The year they joined formatted as Fall YYYY or Spring YYYY
  graduationYear      String? // The year they will graduate formatted as Fall YYYY or Spring YYYY
  dietaryRestrictions DietaryRestriction[]
  profilePictureUrl   String?
}

model Project {
  id                String   @id @default(uuid())
  title             String   @unique
  description       String?
  members           User[]
  createdAt         DateTime @default(now()) // For debugging purposes
  updatedAt         DateTime @updatedAt
  projectPictureUrl String?
}

// EXEC have access to everything
// PLs have access to their projects and can add members to the project
// Users have access to their profile and projects they are part of
// The User model supports many roles
enum Role {
  EXEC
  PL
  EDUCATION
  USER
  APPLICANT // If we ever want to also store applicants in the DB
}

enum DietaryRestriction {
  VEGAN
  VEGETARIAN
  GLUTEN_FREE
  DAIRY_FREE
  NUT_FREE
  OTHER
}
